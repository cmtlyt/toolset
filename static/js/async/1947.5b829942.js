"use strict";(self.webpackChunk_cmtlyt_toolset=self.webpackChunk_cmtlyt_toolset||[]).push([["1947"],{2133:function(e,n,i){i.r(n),i.d(n,{default:function(){return a}});var t=i(2676),l=i(453),r=i(2287);function s(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",ul:"ul",li:"li",ol:"ol"},(0,l.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"接口隔离原则",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#接口隔离原则",children:"#"}),"接口隔离原则"]}),"\n",(0,t.jsx)(r.Z,{defaultLocale:"zh-CN"}),"\n",(0,t.jsxs)(n.h2,{id:"简介",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#简介",children:"#"}),"简介"]}),"\n",(0,t.jsx)(n.p,{children:"接口隔离原则 (Interface Segregation Principle, ISP) 是 SOLID 设计原则之一, 他强调客户端不应该依赖他不需要的接口. 这一原则指导我们设计细粒度的接口, 以减少耦合并提高系统的灵活性和可维护性."}),"\n",(0,t.jsx)(n.p,{children:"原则说明"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"核心思想: 每个接口应该专注于提供一组相关的行为, 客户端仅需指导他所关心的方法, 而无需了解他不使用的功能. 这样可以减少不必要的依赖, 使得系统更加解耦"}),"\n",(0,t.jsx)(n.li,{children:"避免胖接口: 胖接口 (包含大量不相关方法的接口) 会迫使实现它的类包含很多可能不需要的方法, 这违反了接口隔离原则. 应该将这样的大接口拆分为多个小而具体的接口"}),"\n",(0,t.jsx)(n.li,{children:"客户端定制接口: 为不同的客户端提供定制化的接口, 每个客户端仅使用与之直接相关的接口, 这样可以确保接口的纯粹性和客户端的简洁性"}),"\n",(0,t.jsx)(n.li,{children:"提高灵活性和可测试性: 细粒度的接口使得替换和 mock (在测试中模拟对象) 变得更加容易, 从而提高了系统的测试性和可扩展性"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"实现方法"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"模块化接口设计: 根据功能将接口拆分成多个小模块, 每个模块代表一类相关操作"}),"\n",(0,t.jsx)(n.li,{children:"使用多重继承或接口继承 (如果语言支持): 允许类实现多个小接口, 而不是单一的大接口"}),"\n",(0,t.jsx)(n.li,{children:"基于角色设计接口: 考虑类在系统中的角色和他需要提供的服务, 据此来定义接口"}),"\n",(0,t.jsx)(n.li,{children:"持续审查和重构: 随着系统的发展, 定期检查接口的使用情况, 即时拆分过大的接口, 确保接口职责清晰"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"遵循接口隔离原则可以帮助我们构建更加灵活、可扩展的系统, 特别是在大型项目或团队协作中, 他能够显著降低因接口滥用导致的负责性和混乱."})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(s,e)})):s(e)}let a=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["wiki%2FSOLID%2FISP.md"]={toc:[{id:"简介",text:"简介",depth:2}],title:"接口隔离原则",frontmatter:{}}},2287:function(e,n,i){i.d(n,{Z:function(){return a}});var t=i(2676),l=i(5271),r=i(2117);i(4986);let s={"zh-CN":e=>`预计阅读时间: ${e.minutes>=1?`${Math.ceil(e.minutes)} 分钟`:"小于 1 分钟"}`,"en-US":e=>`Estimated reading time: ${e.minutes>=1?`${Math.ceil(e.minutes)} minutes`:"less than 1 minute"}`};function c(e,n,i){let t=Object.keys(s).includes(n)?n:i;return s[t](e)}let a=e=>{let{defaultLocale:n="en-US"}=e,i=(0,r.Vi)().page.readingTimeData,s=(0,r.Jr)(),a=(0,r.e7)(),[h,d]=(0,l.useState)(c(i,s,n));return(0,l.useEffect)(()=>{d(c(i,s,n))},[s,i]),(0,t.jsx)("span",{"data-dark":String(a),className:"rp-reading-time",children:h})}}}]);