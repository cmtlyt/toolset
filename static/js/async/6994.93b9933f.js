"use strict";(self.webpackChunk_cmtlyt_toolset=self.webpackChunk_cmtlyt_toolset||[]).push([["6994"],{7363:function(e,n,t){t.r(n),t.d(n,{default:function(){return a}});var i=t(2676),r=t(453),s=t(2287);function l(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",strong:"strong",ol:"ol",li:"li",ul:"ul"},(0,r.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"依赖倒置原则",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#依赖倒置原则",children:"#"}),"依赖倒置原则"]}),"\n",(0,i.jsx)(s.Z,{defaultLocale:"zh-CN"}),"\n",(0,i.jsxs)(n.h2,{id:"简介",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#简介",children:"#"}),"简介"]}),"\n",(0,i.jsxs)(n.p,{children:["依赖倒置原则 (Dependency Inversion Principle, DIP) 是",(0,i.jsx)(n.strong,{children:"面向对象设计"}),"的五大基本原则之一, 由 Robert C. Martin 在 1996 年首次提出. 该原则是 SOLID 原则中的 D 原则, 强调了软件设计中依赖关系的管理和组织方式, 旨在提高软件的灵活性、可扩展性和和测试性."]}),"\n",(0,i.jsx)(n.p,{children:"依赖倒置原则主要包括两个核心要点:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"高层模块不应该依赖于低层模块, 两者都应该依赖于抽象. 在传统的软件设计中, 高层模块 (如业务逻辑层) 往往直接依赖于底层模块 (如数据访问层). 依赖倒置原则要求我们颠倒这种依赖关系, 即不是高层直接依赖低层, 而是双方都依赖于一个抽象的接口或者抽象类. 这样做的好处是, 当低层模块发生变化时, 不会直接影响到高层模块, 降低了模块间的耦合度"}),"\n",(0,i.jsx)(n.li,{children:"抽象不应该依赖于细节, 细节应该依赖于抽象. 这一点是对第一点的进一步阐述, 强调在设计中, 我们应该从具体的实现中抽离出接口或抽象类, 让具体的实现类去实现这些抽象定义. 这样一来, 具体实现的变更不会影响到使用这些抽象的代码, 保证了系统的灵活性和可扩展性"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"依赖倒置原则的实现通常需要借助一下设计模式和技术:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"接口编程: 定义清晰的接口来规范模块间交互, 而不是直接编程到具体类上"}),"\n",(0,i.jsx)(n.li,{children:"依赖注入 (DI): 一种实现控制反转 (IoC, Inversion of Control) 的方式, 通过外部容器或框架来注入依赖对象, 而不是在类内部创建依赖对象, 从而实现依赖关系的解耦"}),"\n",(0,i.jsx)(n.li,{children:"抽象类: 当具体实现由共性操作时, 可以使用抽象类来提供默认行为, 并要求子类遵循一定的接口规范"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"遵循依赖倒置原则可以帮助我们构建更加灵活、可维护的系统, 是的系统更容易应对变化, 也便于进行单元测试."})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(l,e)})):l(e)}let a=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["wiki%2FSOLID%2FDIP.md"]={toc:[{id:"简介",text:"简介",depth:2}],title:"依赖倒置原则",frontmatter:{}}},2287:function(e,n,t){t.d(n,{Z:function(){return a}});var i=t(2676),r=t(5271),s=t(2117);t(4986);let l={"zh-CN":e=>`预计阅读时间: ${e.minutes>=1?`${Math.ceil(e.minutes)} 分钟`:"小于 1 分钟"}`,"en-US":e=>`Estimated reading time: ${e.minutes>=1?`${Math.ceil(e.minutes)} minutes`:"less than 1 minute"}`};function c(e,n,t){let i=Object.keys(l).includes(n)?n:t;return l[i](e)}let a=e=>{let{defaultLocale:n="en-US"}=e,t=(0,s.Vi)().page.readingTimeData,l=(0,s.Jr)(),a=(0,s.e7)(),[h,d]=(0,r.useState)(c(t,l,n));return(0,r.useEffect)(()=>{d(c(t,l,n))},[l,t]),(0,i.jsx)("span",{"data-dark":String(a),className:"rp-reading-time",children:h})}}}]);