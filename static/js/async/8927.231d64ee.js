"use strict";(self.webpackChunk_cmtlyt_toolset=self.webpackChunk_cmtlyt_toolset||[]).push([["8927"],{1117:function(e,n,r){r.r(n),r.d(n,{default:function(){return d}});var i=r(2676),s=r(453),t=r(2287);function c(e){let n=Object.assign({h1:"h1",a:"a",p:"p",ul:"ul",li:"li",div:"div",ol:"ol",h2:"h2",code:"code"},(0,s.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"简介",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#简介",children:"#"}),"简介"]}),"\n",(0,i.jsx)(t.Z,{defaultLocale:"zh-CN"}),"\n",(0,i.jsx)(n.p,{children:"Turbo 是下一代前端开发工具链, 使用 Rust 编写, 他由 3 个主要部分组成"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Trubopack: 继承自 Webpack 的增量打包机"}),"\n",(0,i.jsx)(n.li,{children:"Turborepo: 增量构建系统"}),"\n",(0,i.jsx)(n.li,{children:"Turbo engine: 底层的增量计算和缓存引擎"}),"\n"]}),"\n",(0,i.jsxs)(n.div,{className:"rspress-directive info",children:[(0,i.jsx)(n.div,{className:"rspress-directive-title",children:"什么叫增量构建"}),(0,i.jsxs)(n.div,{className:"rspress-directive-content",children:[(0,i.jsx)(n.p,{children:"\n增量构建是一种构建方法, 他的主要目的是提高开发效率和节约资源. 在软件开发尤其是大型项目中, 每次微小的修改如果都触发整个项目的重新构建, 将会非常耗时而且没有必要. 增量构建技术就可以让我们只重新构建那些自上次构建依赖发生改变的代码或资源部分, 而跳过没有变化的部分 (或许就是你这次修改的文件)."}),(0,i.jsx)(n.p,{children:"增量构建的核心特点包括:"}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"节省时间: 由于只重新编译或处理变更的文件, 大大减少了构建所需要的时间"}),"\n",(0,i.jsx)(n.li,{children:"提升开发效率: 开发者可以快速的看到他们的更改效果, 加快了调试和迭代的速度"}),"\n",(0,i.jsx)(n.li,{children:"资源优化: 减少了 CPU、内存等资源的消耗"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/toolset/wiki/CI_CD",children:"持续集成/持续部署 (CI/CD)"}),": 在自动化流水线中, 增量构建能够使快速部署成为可能, 加快软件交付流程"]}),"\n"]}),(0,i.jsx)(n.p,{children:"应用场景示例:"}),(0,i.jsx)(n.p,{children:"Web 开发中的 Webpack: 在使用 Webpack 作为模块打包工具时, 配合 webpack-dev-server, 他能够监视文件变化, 仅重新打包发生变化的模块, 实现快速的热更新\nAndroid Studio 与 Gradle: Android 应用开发中, Gradle 构建系统利用其内置的增量构建能力、仅重新编译有变动的源代码文件或依赖, 而不是整个目录\n大数据处理工具如 Apache Kylin: 在大数据分析领域, 增量构建用于避免对整个数据集的全量计算, 而是仅处理新到达的数据段, 适用于频繁更新的大数据立方体 (Cube)"}),(0,i.jsx)(n.p,{children:"总之, 增量构建的核心价值在于通过智能化的识别并处理真正需要重新构建的部分, 从而达到高效、快速的构建目的."})]})]}),"\n",(0,i.jsxs)(n.h2,{id:"补充",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#补充",children:"#"}),"补充"]}),"\n",(0,i.jsx)(n.p,{children:"Turborepo 是一个针对 JavaScript 和 TypeScript 代码库进行优化的智能构建系统."}),"\n",(0,i.jsx)(n.p,{children:"他可以使用缓存来增强本地设置并加快项目持续集成 (CI) 的速度."}),"\n",(0,i.jsx)(n.p,{children:"Turborepo 一开始的设计就是增量采用的, 你可以随时把他加入到你的项目中, 而不是必须在创建项目的时候就加入."}),"\n",(0,i.jsxs)(n.p,{children:["Turborepo 的 monorepo 可以和 ",(0,i.jsx)(n.code,{children:"npm"}),"、",(0,i.jsx)(n.code,{children:"pnpm"}),"、",(0,i.jsx)(n.code,{children:"yarn"})," 等包管理工具配合使用, 如果觉得你现在的 monorepo 拖慢了你的速度, 那或许你就可以开始使用 Turborepo 了."]})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(c,e)})):c(e)}let d=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["wiki%2FTurbo%2Findex.md"]={toc:[{id:"补充",text:"补充",depth:2}],title:"简介",frontmatter:{}}},2287:function(e,n,r){r.d(n,{Z:function(){return d}});var i=r(2676),s=r(5271),t=r(2117);r(4986);let c={"zh-CN":e=>`预计阅读时间: ${e.minutes>=1?`${Math.ceil(e.minutes)} 分钟`:"小于 1 分钟"}`,"en-US":e=>`Estimated reading time: ${e.minutes>=1?`${Math.ceil(e.minutes)} minutes`:"less than 1 minute"}`};function l(e,n,r){let i=Object.keys(c).includes(n)?n:r;return c[i](e)}let d=e=>{let{defaultLocale:n="en-US"}=e,r=(0,t.Vi)().page.readingTimeData,c=(0,t.Jr)(),d=(0,t.e7)(),[a,h]=(0,s.useState)(l(r,c,n));return(0,s.useEffect)(()=>{h(l(r,c,n))},[c,r]),(0,i.jsx)("span",{"data-dark":String(d),className:"rp-reading-time",children:a})}}}]);